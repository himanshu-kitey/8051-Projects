C51 COMPILER V9.60.7.0   LCD_DRIVERS                                                       10/16/2024 14:21:14 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD_DRIVERS
OBJECT MODULE PLACED IN .\Objects\lcd_drivers.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd_drivers.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\lcd_drivers.lst) TABS(2) OBJECT(.\Objects\lcd_drivers.obj)

line level    source

   1          #include <reg51.h>
   2          #include "dlyMs.h"
   3          #include "types.h"
   4          #include "lcd_headers.h"
   5          
   6          #define LCD_DATA P0
   7          sbit RS=P2^7;
   8          sbit RW=P2^6;
   9          sbit EN=P2^5;
  10          
  11          void lcd_data(u8 d)
  12          {
  13   1        LCD_DATA=d;
  14   1        RS=1;
  15   1        RW=0;
  16   1        EN=1;
  17   1        dlyMs(2);
  18   1        EN=0;
  19   1      }
  20          
  21          /*
  22          //4-bit-mode-setting
  23          void lcd_data(u8 d)
  24          {
  25            LCD_DATA=(d&0xF0);            //LCD_DATA=d>>4;
  26            RS=1;
  27            RW=0;
  28            EN=1;
  29            dlyMs(2);                     //dlyMs(1000);
  30            EN=0;
  31            
  32            LCD_DATA=((d<<4) & 0xF0);     //LCD_DATA=d&0x0F;
  33            RS=1;
  34            RW=0;
  35            EN=1;
  36            dlyMs(2);                     //dlyMs(1000);
  37            EN=0;
  38          }
  39          */
  40          
  41          void lcd_cmd(u8 cmd)
  42          {
  43   1        LCD_DATA=cmd;
  44   1        RS=0;
  45   1        RW=0;
  46   1        EN=1;
  47   1        dlyMs(2);
  48   1        EN=0;
  49   1      }
  50          
  51          /*
  52          //4-bit-mode-setting
  53          void lcd_cmd(u8 cmd)
  54          {
C51 COMPILER V9.60.7.0   LCD_DRIVERS                                                       10/16/2024 14:21:14 PAGE 2   

  55            LCD_DATA=(cmd&0xF0);          //LCD_DATA=cmd>>4;
  56            RS=0;
  57            RW=0;
  58            EN=1;
  59            dlyMs(2);                     //dlyMs(1000);
  60            EN=0;
  61            
  62            LCD_DATA=((cmd<<4)& 0xF0);    //LCD_DATA=cmd&0x0F;
  63            RS=0;
  64            RW=0;
  65            EN=1;
  66            dlyMs(2);                     //dlyMs(1000);
  67            EN=0;
  68          }
  69          */
  70          
  71          /* 8-bit-mode-interfacing*/
  72          void lcd_init(void)
  73          {
  74   1        lcd_cmd(0x02);
  75   1        lcd_cmd(0x38);
  76   1        lcd_cmd(0x0C);
  77   1        lcd_cmd(0x01);
  78   1      }
  79          
  80          /*
  81          //4-bit-mode-interfacing
  82          void lcd_init(void)
  83          {
  84            lcd_cmd(0x02);
  85            lcd_cmd(0x28);
  86            lcd_cmd(0x0E);
  87            lcd_cmd(0x01);
  88          }
  89          */
  90          
  91          void lcd_string(u8 *ptr)
  92          {
  93   1        while(*ptr!=0)
  94   1        {
  95   2          lcd_data(*ptr);
  96   2          ptr++;
  97   2        }
  98   1      }
  99          
 100          void lcd_int(s8 n)
 101          {
 102   1        s8 a[10],i=0;
 103   1        if(n<0)
 104   1        {
 105   2          lcd_data('.');
 106   2          n=-n;
 107   2        }
 108   1        do
 109   1        {
 110   2          a[i++]=n%10+48;
 111   2          n=n/10;
 112   2        }while(n);
 113   1        for(i;i>0;i--)
 114   1        lcd_data(a[i-1]);
 115   1      }
 116          
C51 COMPILER V9.60.7.0   LCD_DRIVERS                                                       10/16/2024 14:21:14 PAGE 3   

 117          void lcdDecToHex(u16 n)       //n=127 / 0x7f 
 118          {
 119   1        u8 a[4],t;
 120   1        s8 i=0; 
 121   1        if(n==0)
 122   1        {
 123   2          lcd_data('0'); 
 124   2        }    
 125   1        else 
 126   1        {
 127   2          while(n>0) 
 128   2          {
 129   3            t=n%16; 
 130   3            if(t>9) 
 131   3              t=(t-10)+'A'; 
 132   3            else 
 133   3              t=t+48; 
 134   3          a[i]=t; 
 135   3          n=n/16; 
 136   3          i++; 
 137   3          }   
 138   2          for(--i;i>=0;i--) 
 139   2            lcd_data(a[i]);    
 140   2         }    
 141   1      }
 142          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
